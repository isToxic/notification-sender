/*
 * This file is generated by jOOQ.
 */
package org.zgr.notification.sender.db.tables;


import java.sql.Date;
import java.sql.Time;
import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row21;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.zgr.notification.sender.db.NotificationSender;
import org.zgr.notification.sender.db.tables.records.IntCommQueryRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.14.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IntCommQuery extends TableImpl<IntCommQueryRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>notification_sender.int_comm_query</code>
     */
    public static final IntCommQuery INT_COMM_QUERY = new IntCommQuery();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<IntCommQueryRecord> getRecordType() {
        return IntCommQueryRecord.class;
    }

    /**
     * The column <code>notification_sender.int_comm_query.campaign_cd</code>.
     */
    public final TableField<IntCommQueryRecord, String> CAMPAIGN_CD = createField(DSL.name("campaign_cd"), SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>notification_sender.int_comm_query.contact_id</code>.
     */
    public final TableField<IntCommQueryRecord, Long> CONTACT_ID = createField(DSL.name("contact_id"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>notification_sender.int_comm_query.cre_card_id</code>.
     */
    public final TableField<IntCommQueryRecord, Long> CRE_CARD_ID = createField(DSL.name("cre_card_id"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>notification_sender.int_comm_query.offer_id</code>.
     */
    public final TableField<IntCommQueryRecord, Integer> OFFER_ID = createField(DSL.name("offer_id"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>notification_sender.int_comm_query.start_date</code>.
     */
    public final TableField<IntCommQueryRecord, Date> START_DATE = createField(DSL.name("start_date"), SQLDataType.DATE.nullable(false), this, "");

    /**
     * The column <code>notification_sender.int_comm_query.end_date</code>.
     */
    public final TableField<IntCommQueryRecord, Date> END_DATE = createField(DSL.name("end_date"), SQLDataType.DATE.nullable(false), this, "");

    /**
     * The column <code>notification_sender.int_comm_query.start_time</code>.
     */
    public final TableField<IntCommQueryRecord, Time> START_TIME = createField(DSL.name("start_time"), SQLDataType.TIME(6).nullable(false), this, "");

    /**
     * The column <code>notification_sender.int_comm_query.end_time</code>.
     */
    public final TableField<IntCommQueryRecord, Time> END_TIME = createField(DSL.name("end_time"), SQLDataType.TIME(6).nullable(false), this, "");

    /**
     * The column <code>notification_sender.int_comm_query.macrobrend</code>.
     */
    public final TableField<IntCommQueryRecord, String> MACROBREND = createField(DSL.name("macrobrend"), SQLDataType.VARCHAR(12).nullable(false), this, "");

    /**
     * The column <code>notification_sender.int_comm_query.mobile_phone</code>.
     */
    public final TableField<IntCommQueryRecord, String> MOBILE_PHONE = createField(DSL.name("mobile_phone"), SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>notification_sender.int_comm_query.message_text</code>.
     */
    public final TableField<IntCommQueryRecord, String> MESSAGE_TEXT = createField(DSL.name("message_text"), SQLDataType.VARCHAR(250).nullable(false), this, "");

    /**
     * The column <code>notification_sender.int_comm_query.message_header</code>.
     */
    public final TableField<IntCommQueryRecord, String> MESSAGE_HEADER = createField(DSL.name("message_header"), SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>notification_sender.int_comm_query.deep_link</code>.
     */
    public final TableField<IntCommQueryRecord, String> DEEP_LINK = createField(DSL.name("deep_link"), SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>notification_sender.int_comm_query.message_url</code>.
     */
    public final TableField<IntCommQueryRecord, String> MESSAGE_URL = createField(DSL.name("message_url"), SQLDataType.VARCHAR(200), this, "");

    /**
     * The column <code>notification_sender.int_comm_query.int_query_id</code>.
     */
    public final TableField<IntCommQueryRecord, Long> INT_QUERY_ID = createField(DSL.name("int_query_id"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>notification_sender.int_comm_query.int_create_dttm</code>.
     */
    public final TableField<IntCommQueryRecord, Timestamp> INT_CREATE_DTTM = createField(DSL.name("int_create_dttm"), SQLDataType.TIMESTAMP(6).nullable(false), this, "");

    /**
     * The column <code>notification_sender.int_comm_query.int_update_dttm</code>.
     */
    public final TableField<IntCommQueryRecord, Timestamp> INT_UPDATE_DTTM = createField(DSL.name("int_update_dttm"), SQLDataType.TIMESTAMP(6).nullable(false), this, "");

    /**
     * The column <code>notification_sender.int_comm_query.int_status</code>.
     */
    public final TableField<IntCommQueryRecord, String> INT_STATUS = createField(DSL.name("int_status"), SQLDataType.VARCHAR(10).nullable(false), this, "");

    /**
     * The column <code>notification_sender.int_comm_query.int_error_code</code>.
     */
    public final TableField<IntCommQueryRecord, Integer> INT_ERROR_CODE = createField(DSL.name("int_error_code"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>notification_sender.int_comm_query.int_error_text</code>.
     */
    public final TableField<IntCommQueryRecord, String> INT_ERROR_TEXT = createField(DSL.name("int_error_text"), SQLDataType.VARCHAR(200), this, "");

    /**
     * The column <code>notification_sender.int_comm_query.sas_check_flg</code>.
     */
    public final TableField<IntCommQueryRecord, Integer> SAS_CHECK_FLG = createField(DSL.name("sas_check_flg"), SQLDataType.INTEGER, this, "");

    private IntCommQuery(Name alias, Table<IntCommQueryRecord> aliased) {
        this(alias, aliased, null);
    }

    private IntCommQuery(Name alias, Table<IntCommQueryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>notification_sender.int_comm_query</code> table reference
     */
    public IntCommQuery(String alias) {
        this(DSL.name(alias), INT_COMM_QUERY);
    }

    /**
     * Create an aliased <code>notification_sender.int_comm_query</code> table reference
     */
    public IntCommQuery(Name alias) {
        this(alias, INT_COMM_QUERY);
    }

    /**
     * Create a <code>notification_sender.int_comm_query</code> table reference
     */
    public IntCommQuery() {
        this(DSL.name("int_comm_query"), null);
    }

    public <O extends Record> IntCommQuery(Table<O> child, ForeignKey<O, IntCommQueryRecord> key) {
        super(child, key, INT_COMM_QUERY);
    }

    @Override
    public Schema getSchema() {
        return NotificationSender.NOTIFICATION_SENDER;
    }

    @Override
    public IntCommQuery as(String alias) {
        return new IntCommQuery(DSL.name(alias), this);
    }

    @Override
    public IntCommQuery as(Name alias) {
        return new IntCommQuery(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public IntCommQuery rename(String name) {
        return new IntCommQuery(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public IntCommQuery rename(Name name) {
        return new IntCommQuery(name, null);
    }

    // -------------------------------------------------------------------------
    // Row21 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row21<String, Long, Long, Integer, Date, Date, Time, Time, String, String, String, String, String, String, Long, Timestamp, Timestamp, String, Integer, String, Integer> fieldsRow() {
        return (Row21) super.fieldsRow();
    }
}
